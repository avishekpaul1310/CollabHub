# Generated by Django 4.2.20 on 2025-04-02 04:10

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_thread_starter', models.BooleanField(default=False)),
                ('is_scheduled', models.BooleanField(default=False)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='workspace.message')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='SlowChannel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('type', models.CharField(choices=[('reflection', 'Team Reflection'), ('ideation', 'Idea Generation'), ('learning', 'Learning & Growth'), ('documentation', 'Documentation'), ('other', 'Other')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('message_frequency', models.CharField(choices=[('daily', 'Once per day'), ('workday', 'Once per workday'), ('weekly', 'Once per week'), ('biweekly', 'Twice per week'), ('custom', 'Custom schedule')], default='daily', max_length=20)),
                ('delivery_time', models.TimeField(default='09:00:00')),
                ('custom_days', models.CharField(default='12345', help_text='Days to deliver (1=Mon, 7=Sun)', max_length=100)),
                ('min_response_interval', models.DurationField(default=datetime.timedelta(seconds=14400), help_text='Minimum time between responses to encourage thoughtfulness')),
                ('reflection_prompts', models.TextField(blank=True, help_text='Optional prompts to guide discussion (one per line)')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_slow_channels', to=settings.AUTH_USER_MODEL)),
                ('participants', models.ManyToManyField(related_name='slow_channels', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ThreadGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_public', models.BooleanField(default=True)),
                ('allowed_users', models.ManyToManyField(blank=True, related_name='accessible_thread_groups', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_thread_groups', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='WorkItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('type', models.CharField(choices=[('task', 'Task'), ('doc', 'Document'), ('project', 'Project')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('collaborators', models.ManyToManyField(blank=True, related_name='collaborated_items', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='work_item', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='UserOnlineStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('online', 'Online'), ('away', 'Away'), ('afk', 'AFK'), ('offline', 'Offline'), ('break', 'On Break'), ('outside-hours', 'Outside Working Hours')], default='offline', max_length=20)),
                ('status_message', models.CharField(blank=True, max_length=255, null=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('device_info', models.JSONField(blank=True, default=dict)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='workspace_online_status', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'User Online Statuses',
            },
        ),
        migrations.CreateModel(
            name='ThreadMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_thread_starter', models.BooleanField(default=False)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='workspace.threadmessage')),
                ('thread_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thread_messages', to='workspace.threadgroup')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thread_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.AddField(
            model_name='threadgroup',
            name='work_item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thread_groups', to='workspace.workitem'),
        ),
        migrations.CreateModel(
            name='Thread',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_public', models.BooleanField(default=True)),
                ('allowed_users', models.ManyToManyField(blank=True, related_name='accessible_threads', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_threads', to=settings.AUTH_USER_MODEL)),
                ('work_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='threads', to='workspace.workitem')),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='SlowChannelMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_delivered', models.BooleanField(default=False)),
                ('scheduled_delivery', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('prompt', models.CharField(blank=True, max_length=255)),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='workspace.slowchannel')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='workspace.slowchannelmessage')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='slow_channel_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.AddField(
            model_name='slowchannel',
            name='work_item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='slow_channels', to='workspace.workitem'),
        ),
        migrations.CreateModel(
            name='ScheduledMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('scheduled_time', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_sent', models.BooleanField(default=False)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('scheduling_note', models.CharField(blank=True, help_text='Optional note about why you chose this time', max_length=255)),
                ('parent_message', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scheduled_replies', to='workspace.message')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scheduled_messages', to=settings.AUTH_USER_MODEL)),
                ('thread', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scheduled_messages', to='workspace.thread')),
                ('work_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scheduled_messages', to='workspace.workitem')),
            ],
            options={
                'ordering': ['scheduled_time'],
            },
        ),
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dnd_enabled', models.BooleanField(default=False)),
                ('dnd_start_time', models.TimeField(blank=True, null=True)),
                ('dnd_end_time', models.TimeField(blank=True, null=True)),
                ('work_days', models.CharField(default='12345', help_text='Days of week (1-7, where 1 is Monday)', max_length=20)),
                ('work_start_time', models.TimeField(default='09:00')),
                ('work_end_time', models.TimeField(default='17:00')),
                ('show_online_status', models.BooleanField(default=False, help_text='Show your online status to other users')),
                ('share_read_receipts', models.BooleanField(default=True, help_text='Share read receipts with message authors')),
                ('share_working_hours', models.BooleanField(default=True, help_text='Allow others to see your working hours')),
                ('away_mode', models.BooleanField(default=False, help_text='Enable away from keyboard mode')),
                ('away_message', models.CharField(blank=True, help_text="Message to show when you're away", max_length=255)),
                ('auto_away_after', models.IntegerField(default=30, help_text='Set away status after inactive for this many minutes')),
                ('break_frequency', models.IntegerField(default=60, help_text='Reminder frequency in minutes to take breaks')),
                ('lunch_break_start', models.TimeField(blank=True, help_text='Start time of your lunch break', null=True)),
                ('lunch_break_duration', models.IntegerField(default=60, help_text='Duration of lunch break in minutes')),
                ('focus_mode', models.BooleanField(default=False, help_text='When enabled, only receive notifications from selected users and work items')),
                ('notification_mode', models.CharField(choices=[('all', 'All Notifications'), ('mentions', 'Mentions Only'), ('none', 'None')], default='all', max_length=10)),
                ('focus_users', models.ManyToManyField(blank=True, help_text='Only receive notifications from these users when in focus mode', related_name='focus_notifications', to=settings.AUTH_USER_MODEL)),
                ('focus_work_items', models.ManyToManyField(blank=True, help_text='Only receive notifications from these work items when in focus mode', related_name='focus_notifications', to='workspace.workitem')),
                ('muted_channels', models.ManyToManyField(blank=True, related_name='muted_by_users', to='workspace.workitem')),
                ('muted_threads', models.ManyToManyField(blank=True, related_name='muted_by_users', to='workspace.thread')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=255)),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('notification_type', models.CharField(choices=[('message', 'New Message'), ('update', 'Work Item Update'), ('file_upload', 'New File')], max_length=20)),
                ('priority', models.CharField(choices=[('urgent', 'Urgent'), ('normal', 'Normal'), ('low', 'Low')], default='normal', max_length=10)),
                ('thread', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workspace.thread')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
                ('work_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workspace.workitem')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='message',
            name='thread',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='thread_messages', to='workspace.thread'),
        ),
        migrations.AddField(
            model_name='message',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='message',
            name='work_item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='workspace.workitem'),
        ),
        migrations.CreateModel(
            name='FileAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='work_item_files/')),
                ('name', models.CharField(max_length=255)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('work_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='workspace.workitem')),
            ],
        ),
        migrations.CreateModel(
            name='BreakEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('duration', models.PositiveIntegerField(blank=True, null=True)),
                ('completed', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MessageReadReceipt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('read_at', models.DateTimeField(auto_now_add=True)),
                ('read_duration', models.DurationField(blank=True, help_text='How long the user spent viewing this message', null=True)),
                ('has_responded', models.BooleanField(default=False)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='read_receipts', to='workspace.message')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='read_receipts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['read_at'],
                'unique_together': {('message', 'user')},
            },
        ),
    ]
